name: Checks
on: [push]
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Lint with Ruff
        run: poetry run ruff --output-format github .
        continue-on-error: true

  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Check formatting
        run: poetry run ruff format --check pubobot/ test/

  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Run pytest
        run: poetry run pytest --junitxml=junit/test-results-${{ matrix.os }}-py${{ matrix.python-version }}.xml

      - name: Upload pytest results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.os }}-py${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.os }}-py${{ matrix.python-version }}.xml
        if: ${{ always() }}
